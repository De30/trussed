initSidebarItems({"fn":[["cbor_deserialize",""],["cbor_serialize",""],["cbor_serialize_bytebuf",""],["cbor_serialize_bytes",""]],"macro":[["block",""],["debug","Local version of `debug!`."],["debug_now","Immediate version of `debug!`."],["error","Local version of `error!`."],["error_now","Immediate version of `error!`."],["info","Local version of `info!`."],["info_now","Immediate version of `info!`."],["log","Local version of `log!`."],["log_now","Immediate version of `log!`."],["platform",""],["store",""],["syscall",""],["trace","Local version of `trace!`."],["trace_now","Immediate version of `trace!`."],["try_debug","Fallible version of `debug!`."],["try_debug_now","Fallible immediate version of `debug!`."],["try_error","Fallible version of `error!`."],["try_error_now","Fallible immediate version of `error!`."],["try_info","Fallible version of `info!`."],["try_info_now","Fallible immediate version of `info!`."],["try_log_now","Fallible immediate version of `log!`."],["try_syscall",""],["try_trace","Fallible version of `trace!`."],["try_trace_now","Fallible immediate version of `trace!`."],["try_warn","Fallible version of `warn!`."],["try_warn_now","Fallible immediate version of `warn!`."],["warn","Local version of `warn!`."],["warn_now","Immediate version of `warn!`."]],"mod":[["api","This (incomplete!) API loosely follows PKCS#11 v3."],["client","Client interface for applications.The API methods (such as `GenerateKey`, `Sign`, `Verify`,...) are implemented by a variety of mechanisms (such as `Ed255`, `X255`, `Chacha8Poly1305`, `HmacSha256`,...)."],["config",""],["consts","Type aliases for many constants."],["error",""],["mechanisms",""],["pipe",""],["platform","Trait for platforms to implement that use Trussed."],["service",""],["store","`store` presents a combined interface to three littlefs2 filesystems: internal flash, external flash, volatile/RAM."],["types",""]],"struct":[["ByteBuf",""]],"trait":[["ArrayLength","Trait making `GenericArray` work, marking types to be used as length of an array"],["Interchange","Do NOT implement this yourself! Use the macro `interchange!`."]]});