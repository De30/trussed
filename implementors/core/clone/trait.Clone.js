(function() {var implementors = {};
implementors["aead"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["aes_soft"] = [{"text":"impl Clone for Aes128","synthetic":false,"types":[]},{"text":"impl Clone for Aes192","synthetic":false,"types":[]},{"text":"impl Clone for Aes256","synthetic":false,"types":[]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize:&nbsp;Clone + ArrayLength&lt;u8&gt;&gt; Clone for BlockBuffer&lt;BlockSize&gt;","synthetic":false,"types":[]}];
implementors["block_modes"] = [{"text":"impl Clone for BlockModeError","synthetic":false,"types":[]},{"text":"impl Clone for InvalidKeyIvLength","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + BlockCipher + NewBlockCipher, P:&nbsp;Clone + Padding&gt; Clone for Cbc&lt;C, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::BlockSize: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + BlockCipher, P:&nbsp;Clone + Padding&gt; Clone for Cfb&lt;C, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::BlockSize: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + BlockCipher + NewBlockCipher, P:&nbsp;Clone + Padding&gt; Clone for Cfb8&lt;C, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::BlockSize: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + BlockCipher, P:&nbsp;Clone + Padding&gt; Clone for Ecb&lt;C, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + BlockCipher + NewBlockCipher, P:&nbsp;Clone + Padding&gt; Clone for Ofb&lt;C, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::BlockSize: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + BlockCipher + NewBlockCipher, P:&nbsp;Clone + Padding&gt; Clone for Pcbc&lt;C, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C::BlockSize: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["block_padding"] = [{"text":"impl Clone for PadError","synthetic":false,"types":[]},{"text":"impl Clone for UnpadError","synthetic":false,"types":[]},{"text":"impl Clone for ZeroPadding","synthetic":false,"types":[]},{"text":"impl Clone for Pkcs7","synthetic":false,"types":[]},{"text":"impl Clone for AnsiX923","synthetic":false,"types":[]},{"text":"impl Clone for Iso7816","synthetic":false,"types":[]},{"text":"impl Clone for NoPadding","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]}];
implementors["cbor_smol"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["chacha20"] = [{"text":"impl Clone for ChaCha8Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha8RngCore","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha12Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha12RngCore","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha20Rng","synthetic":false,"types":[]},{"text":"impl Clone for ChaCha20RngCore","synthetic":false,"types":[]}];
implementors["chacha20poly1305"] = [{"text":"impl&lt;C&gt; Clone for ChaChaPoly1305&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: NewStreamCipher&lt;KeySize = U32, NonceSize = U12&gt; + SyncStreamCipher + SyncStreamCipherSeek,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["cipher"] = [{"text":"impl Clone for InvalidKeyLength","synthetic":false,"types":[]},{"text":"impl Clone for LoopError","synthetic":false,"types":[]},{"text":"impl Clone for InvalidKeyNonceLength","synthetic":false,"types":[]},{"text":"impl Clone for OverflowError","synthetic":false,"types":[]}];
implementors["cosey"] = [{"text":"impl Clone for PublicKey","synthetic":false,"types":[]},{"text":"impl Clone for P256PublicKey","synthetic":false,"types":[]},{"text":"impl Clone for EcdhEsHkdf256PublicKey","synthetic":false,"types":[]},{"text":"impl Clone for Ed25519PublicKey","synthetic":false,"types":[]},{"text":"impl Clone for TotpPublicKey","synthetic":false,"types":[]},{"text":"impl Clone for X25519PublicKey","synthetic":false,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Clone for MacError","synthetic":false,"types":[]},{"text":"impl Clone for InvalidKeyLength","synthetic":false,"types":[]},{"text":"impl&lt;M:&nbsp;Clone + Mac&gt; Clone for Output&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M::OutputSize: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["cstr_core"] = [{"text":"impl Clone for FromBytesWithNulError","synthetic":false,"types":[]}];
implementors["delog"] = [{"text":"impl Clone for Statistics","synthetic":false,"types":[]},{"text":"impl Clone for DefaultRenderer","synthetic":false,"types":[]},{"text":"impl Clone for RipgrepRenderer","synthetic":false,"types":[]}];
implementors["der"] = [{"text":"impl&lt;'a&gt; Clone for Any&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, N:&nbsp;Clone + BigUIntSize&gt; Clone for BigUInt&lt;'a, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for BitString&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for GeneralizedTime","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Ia5String&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Null","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for OctetString&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PrintableString&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Sequence&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for UtcTime","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Utf8String&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for ErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for Header","synthetic":false,"types":[]},{"text":"impl Clone for Length","synthetic":false,"types":[]},{"text":"impl Clone for Tag","synthetic":false,"types":[]}];
implementors["des"] = [{"text":"impl Clone for Des","synthetic":false,"types":[]},{"text":"impl Clone for TdesEde3","synthetic":false,"types":[]},{"text":"impl Clone for TdesEee3","synthetic":false,"types":[]},{"text":"impl Clone for TdesEde2","synthetic":false,"types":[]},{"text":"impl Clone for TdesEee2","synthetic":false,"types":[]}];
implementors["digest"] = [{"text":"impl Clone for InvalidOutputSize","synthetic":false,"types":[]}];
implementors["embedded_hal"] = [{"text":"impl Clone for Polarity","synthetic":false,"types":[]},{"text":"impl Clone for Phase","synthetic":false,"types":[]},{"text":"impl Clone for Mode","synthetic":false,"types":[]},{"text":"impl Clone for Direction","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Clone, N&gt; Clone for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, N&gt; Clone for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["half"] = [{"text":"impl Clone for bf16","synthetic":false,"types":[]},{"text":"impl Clone for f16","synthetic":false,"types":[]}];
implementors["heapless"] = [{"text":"impl&lt;T:&nbsp;Clone, N:&nbsp;Clone&gt; Clone for HistoryBuffer&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V, N, S&gt; Clone for IndexMap&lt;K, V, N, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Eq + Hash + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;Bucket&lt;K, V&gt;&gt; + ArrayLength&lt;Option&lt;Pos&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N, S&gt; Clone for IndexSet&lt;T, N, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;Bucket&lt;T, ()&gt;&gt; + ArrayLength&lt;Option&lt;Pos&gt;&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V, N&gt; Clone for LinearMap&lt;K, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;(K, V)&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Eq + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N&gt; Clone for String&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;u8&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N&gt; Clone for Vec&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N, K&gt; Clone for BinaryHeap&lt;T, N, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Kind,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Ord + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N, C&gt; Clone for Queue&lt;T, N, u8, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: XCore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N, C&gt; Clone for Queue&lt;T, N, u16, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: XCore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, N, C&gt; Clone for Queue&lt;T, N, usize, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: XCore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, N, U, C&gt; Clone for Iter&lt;'a, T, N, U, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Uxx,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: XCore,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["heapless_bytes"] = [{"text":"impl&lt;N:&nbsp;Clone + ArrayLength&lt;u8&gt;&gt; Clone for Bytes&lt;N&gt;","synthetic":false,"types":[]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Clone for Hmac&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Update + BlockInput + FixedOutput + Reset + Default + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;D::BlockSize: ArrayLength&lt;u8&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["interchange"] = [{"text":"impl Clone for State","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Clone for DIR","synthetic":false,"types":[]},{"text":"impl Clone for group","synthetic":false,"types":[]},{"text":"impl Clone for utimbuf","synthetic":false,"types":[]},{"text":"impl Clone for timeval","synthetic":false,"types":[]},{"text":"impl Clone for timespec","synthetic":false,"types":[]},{"text":"impl Clone for rlimit","synthetic":false,"types":[]},{"text":"impl Clone for rusage","synthetic":false,"types":[]},{"text":"impl Clone for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Clone for hostent","synthetic":false,"types":[]},{"text":"impl Clone for iovec","synthetic":false,"types":[]},{"text":"impl Clone for pollfd","synthetic":false,"types":[]},{"text":"impl Clone for winsize","synthetic":false,"types":[]},{"text":"impl Clone for linger","synthetic":false,"types":[]},{"text":"impl Clone for sigval","synthetic":false,"types":[]},{"text":"impl Clone for itimerval","synthetic":false,"types":[]},{"text":"impl Clone for tms","synthetic":false,"types":[]},{"text":"impl Clone for servent","synthetic":false,"types":[]},{"text":"impl Clone for protoent","synthetic":false,"types":[]},{"text":"impl Clone for FILE","synthetic":false,"types":[]},{"text":"impl Clone for fpos_t","synthetic":false,"types":[]},{"text":"impl Clone for timezone","synthetic":false,"types":[]},{"text":"impl Clone for in_addr","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Clone for addrinfo","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Clone for fd_set","synthetic":false,"types":[]},{"text":"impl Clone for tm","synthetic":false,"types":[]},{"text":"impl Clone for sched_param","synthetic":false,"types":[]},{"text":"impl Clone for Dl_info","synthetic":false,"types":[]},{"text":"impl Clone for lconv","synthetic":false,"types":[]},{"text":"impl Clone for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for ifaddrs","synthetic":false,"types":[]},{"text":"impl Clone for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Clone for arpreq","synthetic":false,"types":[]},{"text":"impl Clone for arpreq_old","synthetic":false,"types":[]},{"text":"impl Clone for arphdr","synthetic":false,"types":[]},{"text":"impl Clone for mmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for epoll_event","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Clone for utsname","synthetic":false,"types":[]},{"text":"impl Clone for sigevent","synthetic":false,"types":[]},{"text":"impl Clone for fpos64_t","synthetic":false,"types":[]},{"text":"impl Clone for rlimit64","synthetic":false,"types":[]},{"text":"impl Clone for glob_t","synthetic":false,"types":[]},{"text":"impl Clone for passwd","synthetic":false,"types":[]},{"text":"impl Clone for spwd","synthetic":false,"types":[]},{"text":"impl Clone for dqblk","synthetic":false,"types":[]},{"text":"impl Clone for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Clone for itimerspec","synthetic":false,"types":[]},{"text":"impl Clone for fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for packet_mreq","synthetic":false,"types":[]},{"text":"impl Clone for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Clone for if_nameindex","synthetic":false,"types":[]},{"text":"impl Clone for msginfo","synthetic":false,"types":[]},{"text":"impl Clone for sembuf","synthetic":false,"types":[]},{"text":"impl Clone for input_event","synthetic":false,"types":[]},{"text":"impl Clone for input_id","synthetic":false,"types":[]},{"text":"impl Clone for input_absinfo","synthetic":false,"types":[]},{"text":"impl Clone for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Clone for input_mask","synthetic":false,"types":[]},{"text":"impl Clone for ff_replay","synthetic":false,"types":[]},{"text":"impl Clone for ff_trigger","synthetic":false,"types":[]},{"text":"impl Clone for ff_envelope","synthetic":false,"types":[]},{"text":"impl Clone for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Clone for ff_effect","synthetic":false,"types":[]},{"text":"impl Clone for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Clone for ucred","synthetic":false,"types":[]},{"text":"impl Clone for mntent","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Clone for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Clone for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for arpd_request","synthetic":false,"types":[]},{"text":"impl Clone for inotify_event","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_response","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Clone for regmatch_t","synthetic":false,"types":[]},{"text":"impl Clone for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Clone for __c_anonymous_sockaddr_can_tp","synthetic":false,"types":[]},{"text":"impl Clone for __c_anonymous_sockaddr_can_j1939","synthetic":false,"types":[]},{"text":"impl Clone for can_filter","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Clone for dirent","synthetic":false,"types":[]},{"text":"impl Clone for dirent64","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Clone for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Clone for mq_attr","synthetic":false,"types":[]},{"text":"impl Clone for __c_anonymous_sockaddr_can_can_addr","synthetic":false,"types":[]},{"text":"impl Clone for sockaddr_can","synthetic":false,"types":[]},{"text":"impl Clone for statx","synthetic":false,"types":[]},{"text":"impl Clone for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Clone for aiocb","synthetic":false,"types":[]},{"text":"impl Clone for __exit_status","synthetic":false,"types":[]},{"text":"impl Clone for __timeval","synthetic":false,"types":[]},{"text":"impl Clone for glob64_t","synthetic":false,"types":[]},{"text":"impl Clone for msghdr","synthetic":false,"types":[]},{"text":"impl Clone for cmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for termios","synthetic":false,"types":[]},{"text":"impl Clone for mallinfo","synthetic":false,"types":[]},{"text":"impl Clone for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Clone for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Clone for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Clone for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Clone for nlattr","synthetic":false,"types":[]},{"text":"impl Clone for rtentry","synthetic":false,"types":[]},{"text":"impl Clone for timex","synthetic":false,"types":[]},{"text":"impl Clone for ntptimeval","synthetic":false,"types":[]},{"text":"impl Clone for regex_t","synthetic":false,"types":[]},{"text":"impl Clone for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Clone for utmpx","synthetic":false,"types":[]},{"text":"impl Clone for sigset_t","synthetic":false,"types":[]},{"text":"impl Clone for sysinfo","synthetic":false,"types":[]},{"text":"impl Clone for msqid_ds","synthetic":false,"types":[]},{"text":"impl Clone for sigaction","synthetic":false,"types":[]},{"text":"impl Clone for statfs","synthetic":false,"types":[]},{"text":"impl Clone for flock","synthetic":false,"types":[]},{"text":"impl Clone for flock64","synthetic":false,"types":[]},{"text":"impl Clone for siginfo_t","synthetic":false,"types":[]},{"text":"impl Clone for stack_t","synthetic":false,"types":[]},{"text":"impl Clone for stat","synthetic":false,"types":[]},{"text":"impl Clone for stat64","synthetic":false,"types":[]},{"text":"impl Clone for statfs64","synthetic":false,"types":[]},{"text":"impl Clone for statvfs64","synthetic":false,"types":[]},{"text":"impl Clone for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Clone for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Clone for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Clone for user","synthetic":false,"types":[]},{"text":"impl Clone for mcontext_t","synthetic":false,"types":[]},{"text":"impl Clone for ipc_perm","synthetic":false,"types":[]},{"text":"impl Clone for shmid_ds","synthetic":false,"types":[]},{"text":"impl Clone for termios2","synthetic":false,"types":[]},{"text":"impl Clone for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Clone for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Clone for ucontext_t","synthetic":false,"types":[]},{"text":"impl Clone for statvfs","synthetic":false,"types":[]},{"text":"impl Clone for max_align_t","synthetic":false,"types":[]},{"text":"impl Clone for sem_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Clone for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Clone for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Clone for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Clone for can_frame","synthetic":false,"types":[]},{"text":"impl Clone for canfd_frame","synthetic":false,"types":[]},{"text":"impl Clone for in6_addr","synthetic":false,"types":[]}];
implementors["littlefs2"] = [{"text":"impl Clone for FileType","synthetic":false,"types":[]},{"text":"impl Clone for Metadata","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone + Storage&gt; Clone for Attribute&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S::ATTRBYTES_MAX: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for OpenOptions","synthetic":false,"types":[]},{"text":"impl Clone for DirEntry","synthetic":false,"types":[]},{"text":"impl Clone for SeekFrom","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for PathBuf","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]}];
implementors["littlefs2_sys"] = [{"text":"impl Clone for __fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for lfs_config","synthetic":false,"types":[]},{"text":"impl Clone for lfs_info","synthetic":false,"types":[]},{"text":"impl Clone for lfs_attr","synthetic":false,"types":[]},{"text":"impl Clone for lfs_file_config","synthetic":false,"types":[]},{"text":"impl Clone for lfs_cache","synthetic":false,"types":[]},{"text":"impl Clone for lfs_mdir","synthetic":false,"types":[]},{"text":"impl Clone for lfs_dir","synthetic":false,"types":[]},{"text":"impl Clone for lfs_file","synthetic":false,"types":[]},{"text":"impl Clone for lfs_file_lfs_ctz","synthetic":false,"types":[]},{"text":"impl Clone for lfs_superblock","synthetic":false,"types":[]},{"text":"impl Clone for lfs_gstate","synthetic":false,"types":[]},{"text":"impl Clone for lfs","synthetic":false,"types":[]},{"text":"impl Clone for lfs_lfs_mlist","synthetic":false,"types":[]},{"text":"impl Clone for lfs_lfs_free","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Record&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Metadata&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["micro_ecc_sys"] = [{"text":"impl Clone for __fsid_t","synthetic":false,"types":[]},{"text":"impl Clone for uECC_Curve_t","synthetic":false,"types":[]},{"text":"impl Clone for uECC_HashContext","synthetic":false,"types":[]}];
implementors["nb"] = [{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for Error&lt;E&gt;","synthetic":false,"types":[]}];
implementors["nisty"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for Seed","synthetic":false,"types":[]},{"text":"impl Clone for SharedSecret","synthetic":false,"types":[]},{"text":"impl Clone for SecretKey","synthetic":false,"types":[]},{"text":"impl Clone for PublicKey","synthetic":false,"types":[]},{"text":"impl Clone for Keypair","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]}];
implementors["poly1305"] = [{"text":"impl Clone for Poly1305","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;Clone + BlockRngCore + ?Sized&gt; Clone for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Results: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Clone + BlockRngCore + ?Sized&gt; Clone for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R::Results: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for OsRng","synthetic":false,"types":[]}];
implementors["salty"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for PublicKey","synthetic":false,"types":[]},{"text":"impl Clone for SecretKey","synthetic":false,"types":[]},{"text":"impl Clone for EdwardsPoint","synthetic":false,"types":[]},{"text":"impl Clone for CompressedY","synthetic":false,"types":[]},{"text":"impl Clone for FieldElement","synthetic":false,"types":[]},{"text":"impl Clone for MontgomeryPoint","synthetic":false,"types":[]},{"text":"impl Clone for Scalar","synthetic":false,"types":[]},{"text":"impl Clone for PublicKey","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for BytesDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for SeqDeserializer&lt;I, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for SeqAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, I, E&gt; Clone for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Pair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I::Item as Pair&gt;::Second: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for MapAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_cbor"] = [{"text":"impl Clone for Category","synthetic":false,"types":[]}];
implementors["sha1"] = [{"text":"impl Clone for Sha1","synthetic":false,"types":[]}];
implementors["sha2"] = [{"text":"impl Clone for Sha256","synthetic":false,"types":[]},{"text":"impl Clone for Sha224","synthetic":false,"types":[]},{"text":"impl Clone for Sha512","synthetic":false,"types":[]},{"text":"impl Clone for Sha384","synthetic":false,"types":[]},{"text":"impl Clone for Sha512Trunc256","synthetic":false,"types":[]},{"text":"impl Clone for Sha512Trunc224","synthetic":false,"types":[]}];
implementors["subtle"] = [{"text":"impl Clone for Choice","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CtOption&lt;T&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Abstract","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Await","synthetic":false,"types":[]},{"text":"impl Clone for Become","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Final","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Override","synthetic":false,"types":[]},{"text":"impl Clone for Priv","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for SelfType","synthetic":false,"types":[]},{"text":"impl Clone for SelfValue","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Try","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Typeof","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Unsized","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Virtual","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Tilde","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, P&gt; Clone for Pairs&lt;'a, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Arm","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprArray","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssign","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl Clone for ExprAsync","synthetic":false,"types":[]},{"text":"impl Clone for ExprAwait","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprBox","synthetic":false,"types":[]},{"text":"impl Clone for ExprBreak","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprClosure","synthetic":false,"types":[]},{"text":"impl Clone for ExprContinue","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprForLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprGroup","synthetic":false,"types":[]},{"text":"impl Clone for ExprIf","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprMacro","synthetic":false,"types":[]},{"text":"impl Clone for ExprMatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprRange","synthetic":false,"types":[]},{"text":"impl Clone for ExprReference","synthetic":false,"types":[]},{"text":"impl Clone for ExprRepeat","synthetic":false,"types":[]},{"text":"impl Clone for ExprReturn","synthetic":false,"types":[]},{"text":"impl Clone for ExprStruct","synthetic":false,"types":[]},{"text":"impl Clone for ExprTry","synthetic":false,"types":[]},{"text":"impl Clone for ExprTryBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprTuple","synthetic":false,"types":[]},{"text":"impl Clone for ExprType","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhile","synthetic":false,"types":[]},{"text":"impl Clone for ExprYield","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for FieldPat","synthetic":false,"types":[]},{"text":"impl Clone for FieldValue","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for FnArg","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItem","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemType","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericMethodArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for ImplItem","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemType","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for Item","synthetic":false,"types":[]},{"text":"impl Clone for ItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ItemEnum","synthetic":false,"types":[]},{"text":"impl Clone for ItemExternCrate","synthetic":false,"types":[]},{"text":"impl Clone for ItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ItemForeignMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemImpl","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro2","synthetic":false,"types":[]},{"text":"impl Clone for ItemMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ItemStruct","synthetic":false,"types":[]},{"text":"impl Clone for ItemTrait","synthetic":false,"types":[]},{"text":"impl Clone for ItemTraitAlias","synthetic":false,"types":[]},{"text":"impl Clone for ItemType","synthetic":false,"types":[]},{"text":"impl Clone for ItemUnion","synthetic":false,"types":[]},{"text":"impl Clone for ItemUse","synthetic":false,"types":[]},{"text":"impl Clone for Label","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for Local","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for MethodTurbofish","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Pat","synthetic":false,"types":[]},{"text":"impl Clone for PatBox","synthetic":false,"types":[]},{"text":"impl Clone for PatIdent","synthetic":false,"types":[]},{"text":"impl Clone for PatLit","synthetic":false,"types":[]},{"text":"impl Clone for PatMacro","synthetic":false,"types":[]},{"text":"impl Clone for PatOr","synthetic":false,"types":[]},{"text":"impl Clone for PatPath","synthetic":false,"types":[]},{"text":"impl Clone for PatRange","synthetic":false,"types":[]},{"text":"impl Clone for PatReference","synthetic":false,"types":[]},{"text":"impl Clone for PatRest","synthetic":false,"types":[]},{"text":"impl Clone for PatSlice","synthetic":false,"types":[]},{"text":"impl Clone for PatStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatTuple","synthetic":false,"types":[]},{"text":"impl Clone for PatTupleStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatType","synthetic":false,"types":[]},{"text":"impl Clone for PatWild","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl Clone for RangeLimits","synthetic":false,"types":[]},{"text":"impl Clone for Receiver","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl Clone for Stmt","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for TraitItem","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemConst","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemType","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for UseGlob","synthetic":false,"types":[]},{"text":"impl Clone for UseGroup","synthetic":false,"types":[]},{"text":"impl Clone for UseName","synthetic":false,"types":[]},{"text":"impl Clone for UsePath","synthetic":false,"types":[]},{"text":"impl Clone for UseRename","synthetic":false,"types":[]},{"text":"impl Clone for UseTree","synthetic":false,"types":[]},{"text":"impl Clone for Variadic","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Clone for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["synstructure"] = [{"text":"impl Clone for AddBounds","synthetic":false,"types":[]},{"text":"impl Clone for BindStyle","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for BindingInfo&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for VariantAst&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for VariantInfo&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Structure&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["trussed"] = [{"text":"impl Clone for Request","synthetic":false,"types":[]},{"text":"impl Clone for Reply","synthetic":false,"types":[]},{"text":"impl Clone for Agree","synthetic":false,"types":[]},{"text":"impl Clone for CreateObject","synthetic":false,"types":[]},{"text":"impl Clone for DebugDumpStore","synthetic":false,"types":[]},{"text":"impl Clone for Decrypt","synthetic":false,"types":[]},{"text":"impl Clone for Delete","synthetic":false,"types":[]},{"text":"impl Clone for DeriveKey","synthetic":false,"types":[]},{"text":"impl Clone for DeserializeKey","synthetic":false,"types":[]},{"text":"impl Clone for Encrypt","synthetic":false,"types":[]},{"text":"impl Clone for Exists","synthetic":false,"types":[]},{"text":"impl Clone for FindObjects","synthetic":false,"types":[]},{"text":"impl Clone for GenerateKey","synthetic":false,"types":[]},{"text":"impl Clone for Hash","synthetic":false,"types":[]},{"text":"impl Clone for LocateFile","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFilesFirst","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFilesNext","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFirst","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirNext","synthetic":false,"types":[]},{"text":"impl Clone for ReadFile","synthetic":false,"types":[]},{"text":"impl Clone for RemoveFile","synthetic":false,"types":[]},{"text":"impl Clone for RemoveDir","synthetic":false,"types":[]},{"text":"impl Clone for RandomByteBuf","synthetic":false,"types":[]},{"text":"impl Clone for SerializeKey","synthetic":false,"types":[]},{"text":"impl Clone for Sign","synthetic":false,"types":[]},{"text":"impl Clone for WriteFile","synthetic":false,"types":[]},{"text":"impl Clone for UnsafeInjectKey","synthetic":false,"types":[]},{"text":"impl Clone for UnwrapKey","synthetic":false,"types":[]},{"text":"impl Clone for Verify","synthetic":false,"types":[]},{"text":"impl Clone for WrapKey","synthetic":false,"types":[]},{"text":"impl Clone for RequestUserConsent","synthetic":false,"types":[]},{"text":"impl Clone for Reboot","synthetic":false,"types":[]},{"text":"impl Clone for Uptime","synthetic":false,"types":[]},{"text":"impl Clone for CreateCounter","synthetic":false,"types":[]},{"text":"impl Clone for IncrementCounter","synthetic":false,"types":[]},{"text":"impl Clone for DeleteCertificate","synthetic":false,"types":[]},{"text":"impl Clone for ReadCertificate","synthetic":false,"types":[]},{"text":"impl Clone for WriteCertificate","synthetic":false,"types":[]},{"text":"impl Clone for Agree","synthetic":false,"types":[]},{"text":"impl Clone for CreateObject","synthetic":false,"types":[]},{"text":"impl Clone for FindObjects","synthetic":false,"types":[]},{"text":"impl Clone for DebugDumpStore","synthetic":false,"types":[]},{"text":"impl Clone for Decrypt","synthetic":false,"types":[]},{"text":"impl Clone for Delete","synthetic":false,"types":[]},{"text":"impl Clone for DeriveKey","synthetic":false,"types":[]},{"text":"impl Clone for DeserializeKey","synthetic":false,"types":[]},{"text":"impl Clone for Encrypt","synthetic":false,"types":[]},{"text":"impl Clone for Exists","synthetic":false,"types":[]},{"text":"impl Clone for GenerateKey","synthetic":false,"types":[]},{"text":"impl Clone for Hash","synthetic":false,"types":[]},{"text":"impl Clone for LocateFile","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFilesFirst","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFilesNext","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFirst","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirNext","synthetic":false,"types":[]},{"text":"impl Clone for ReadFile","synthetic":false,"types":[]},{"text":"impl Clone for RemoveDir","synthetic":false,"types":[]},{"text":"impl Clone for RemoveFile","synthetic":false,"types":[]},{"text":"impl Clone for RandomByteBuf","synthetic":false,"types":[]},{"text":"impl Clone for SerializeKey","synthetic":false,"types":[]},{"text":"impl Clone for Sign","synthetic":false,"types":[]},{"text":"impl Clone for WriteFile","synthetic":false,"types":[]},{"text":"impl Clone for Verify","synthetic":false,"types":[]},{"text":"impl Clone for UnsafeInjectKey","synthetic":false,"types":[]},{"text":"impl Clone for UnwrapKey","synthetic":false,"types":[]},{"text":"impl Clone for WrapKey","synthetic":false,"types":[]},{"text":"impl Clone for RequestUserConsent","synthetic":false,"types":[]},{"text":"impl Clone for Reboot","synthetic":false,"types":[]},{"text":"impl Clone for Uptime","synthetic":false,"types":[]},{"text":"impl Clone for CreateCounter","synthetic":false,"types":[]},{"text":"impl Clone for IncrementCounter","synthetic":false,"types":[]},{"text":"impl Clone for DeleteCertificate","synthetic":false,"types":[]},{"text":"impl Clone for ReadCertificate","synthetic":false,"types":[]},{"text":"impl Clone for WriteCertificate","synthetic":false,"types":[]},{"text":"impl Clone for ClientError","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for KeyFlags","synthetic":false,"types":[]},{"text":"impl Clone for SerializedKey","synthetic":false,"types":[]},{"text":"impl Clone for KeyKind","synthetic":false,"types":[]},{"text":"impl Clone for Secrecy","synthetic":false,"types":[]},{"text":"impl Clone for TrussedInterchange","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirState","synthetic":false,"types":[]},{"text":"impl Clone for ReadDirFilesState","synthetic":false,"types":[]},{"text":"impl Clone for Id","synthetic":false,"types":[]},{"text":"impl Clone for Status","synthetic":false,"types":[]},{"text":"impl Clone for To","synthetic":false,"types":[]},{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for Urgency","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for AeadUniqueId","synthetic":false,"types":[]},{"text":"impl Clone for Attributes","synthetic":false,"types":[]},{"text":"impl Clone for CertificateType","synthetic":false,"types":[]},{"text":"impl Clone for DataAttributes","synthetic":false,"types":[]},{"text":"impl Clone for KeyAttributes","synthetic":false,"types":[]},{"text":"impl Clone for Letters","synthetic":false,"types":[]},{"text":"impl Clone for ObjectHandle","synthetic":false,"types":[]},{"text":"impl Clone for ObjectType","synthetic":false,"types":[]},{"text":"impl Clone for PublicKeyAttributes","synthetic":false,"types":[]},{"text":"impl Clone for PrivateKeyAttributes","synthetic":false,"types":[]},{"text":"impl Clone for Location","synthetic":false,"types":[]},{"text":"impl Clone for StorageAttributes","synthetic":false,"types":[]},{"text":"impl Clone for Mechanism","synthetic":false,"types":[]},{"text":"impl Clone for KeySerialization","synthetic":false,"types":[]},{"text":"impl Clone for SignatureSerialization","synthetic":false,"types":[]},{"text":"impl Clone for UniqueId","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Clone for B0","synthetic":false,"types":[]},{"text":"impl Clone for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone + Unsigned + NonZero&gt; Clone for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone + Unsigned + NonZero&gt; Clone for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Z0","synthetic":false,"types":[]},{"text":"impl Clone for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone, B:&nbsp;Clone&gt; Clone for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Clone, A:&nbsp;Clone&gt; Clone for TArr&lt;V, A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Greater","synthetic":false,"types":[]},{"text":"impl Clone for Less","synthetic":false,"types":[]},{"text":"impl Clone for Equal","synthetic":false,"types":[]}];
implementors["universal_hash"] = [{"text":"impl&lt;U:&nbsp;Clone + UniversalHash&gt; Clone for Output&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U::BlockSize: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["void"] = [{"text":"impl Clone for Void","synthetic":false,"types":[]}];
implementors["zeroize"] = [{"text":"impl&lt;Z:&nbsp;Clone + Zeroize&gt; Clone for Zeroizing&lt;Z&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()